%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2018 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
% if ( $q ) {
<h2>WHOIS Results</h2>
% if ( $TicketObj && RT::IR::TicketType( Ticket => $TicketObj ) eq 'Incident' ) {
<form method="post" action="<% RT::IR->HREFTo("Tools/Lookup.html")|n%>">
<input type="hidden" name="incidentid" value="<% $TicketObj->id %>" />
<input type="hidden" name="Subject" value="<% $TicketObj->Subject %>" />
% }
% }
% if ( $WhoisError ) {
<b><% $WhoisError %></b>
% }
<%PERL>

# Prior to upgrading to Net::Whois::RIPE 2.x we could iterate through attributes for the result
# of this query for any server. The updated API replacing the attributes method call
# with Net::Whois::Object throws fatal errors for servers other than ripe.net
# (https://github.com/arhuman/Net-Whois-RIPE/issues/27)

my $DoInvestigate = 0;
if ($WhoisIterator) {
    my $content;
    if ($WhoisServer eq 'whois.ripe.net') {
        my @objects = Net::Whois::Object->new($WhoisIterator);
        foreach my $object ( @objects ) {
            my %seen;
            foreach my $attribute ($object->attributes()) {
                next if ($seen{$attribute});
                $seen{$attribute} = 1;
                my @values;
                foreach my $value ( $object->$attribute() ) {
                    next unless ($value);
                    push (@values, (ref($value) eq 'ARRAY' ) ? @$value : $value);
                }
                next unless (scalar @values);
                my $content = join("\n", ' ', @values);
</%perl>
     <b><%$attribute%></b>:
     <& /Elements/MakeClicky,
     ticket => $TicketObj,
     lookup_params => "ticket=" . ($TicketObj ? $TicketObj->id : 0) . "&server=$WhoisServer",
     content => \$content &>
     <% $content |n %><br />
<%perl>
            }
        }
    }
    else {
        while ( $WhoisIterator->isnt_exhausted) {
            my $block = $WhoisIterator->value;
            $SavedContent .= $block . "\n";
            my $content = join "", $block;
            $m->comp('/Elements/MakeClicky',
                     object        => $TicketObj,
                     lookup_params => "ticket=" . ($TicketObj ? $TicketObj->id : 0) . "&server=$WhoisServer",
                     content       => \$content,);
            $DoInvestigate = 1 if $content =~ /Requestorbox/ig;
</%PERL>
<pre><% $content |n %></pre><br />
%  }
% }
%}
%# Don't offer the option of Investigating to unless there are addresses
% if ( $DoInvestigate ) {
<& /Elements/Submit,
    Name => "InvestigateTo",
    Caption => loc("Investigate to selected addresses"),
    Label => loc("Investigate"),
&>
<& /Elements/Submit,
    Name => "InvestigateWithScriptedActions",
    Caption => loc("Investigate to selected addresses"),
    Label => loc("Investigate using scripted action"),
&>
% }
</form>

% if ($TicketObj and $WhoisIterator and $SavedContent) {
%   my $url = RT::IR->HREFTo(
%       "Tools/Lookup.html?"
%       . $m->comp(
%           '/Elements/QueryString',
%           ticket => $TicketObj->id,
%           q => $q,
%       )
%   );
    <form method="post" action="<% $url %>">
    <input type="hidden" name="LookupResults" value="<% $SavedContent %>" />
    <input type="submit" value="<% loc('Save these results to the ticket') %>" id="save-results-to-ticket" />
    </form>
% }

<%args>
$q =>  undef
$TicketObj => undef
$WhoisServer => undef
$server => undef
</%args>
<%init>

$WhoisServer = $server unless defined $WhoisServer;
unless ($WhoisServer) {
    return unless RT->Config->Get('RunWhoisRequestByDefault');

    $WhoisServer = RT::IR->FirstWhoisServer;

    if ( $TicketObj and $TicketObj->QueueObj->FirstCustomFieldValue('RTIR default WHOIS server') ){
        $WhoisServer = $TicketObj->QueueObj->FirstCustomFieldValue('RTIR default WHOIS server');
    }
}

return unless $q;

my ($WhoisIterator, $WhoisError) = RT::IR->WhoisLookup(
    Server => $WhoisServer,
    Query => $q,
    CurrentUser => $session{'CurrentUser'},
);

my $SavedContent = '';
</%init>
