%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2018 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<&| /Widgets/TitleBox, 
    title       => loc( $FriendlyLifecycle ), 
    title_href  => RT::IR->HREFTo("Incident/Children/?Lifecycle=". $Lifecycle ."&id=".$id),
    titleright_raw => $box_actions,
    title_class    => 'inverse',
    class => 'tickets-list-'. lc(RT::IR::TicketType( Lifecycle => $Lifecycle )),
&>

<& /RTIR/Elements/ShowChildren,
    Ticket           => $IncidentObj, 
    Lifecycle        => $Lifecycle,
    Rows             => $Rows,
    Statuses         => \@active_statuses,
    NoTicketsCaption => loc('No active [_1]', loc( $FriendlyLifecycle )),
&>
% if ( $active->CountAll < $Rows ) {
<& /RTIR/Elements/ShowChildren,
    Ticket           => $IncidentObj,
    Lifecycle        => $Lifecycle,
    Rows             => $Rows - $active->CountAll,
    Statuses         => \@inactive_statuses,
    NoTicketsCaption => loc('No inactive [_1]', loc( $FriendlyLifecycle )),
&>
% }
</&>

<%ARGS>
$IncidentObj
$Lifecycle

$OrderBy => 'Due'

$Rows  => 8
</%ARGS>
<%INIT>


return if $Lifecycle eq RT::IR->lifecycle_countermeasure && RT->Config->Get('RTIR_DisableCountermeasures');


my $FriendlyLifecycle = RT::IR::FriendlyLifecycle($Lifecycle);

my $id = $IncidentObj->id;

my @active_statuses = RT::IR->Statuses( Lifecycle => $Lifecycle);
my @inactive_statuses = RT::IR->Statuses( Lifecycle => $Lifecycle, Initial => 0, Active => 0, Inactive => 1 );

my $active = RT::Tickets->new( $session{'CurrentUser'} );
$active->FromSQL( RT::IR->Query(
    Lifecycle => $Lifecycle,
    MemberOf => $IncidentObj,
    Status   => \@active_statuses,
));

my $inactive = RT::Tickets->new( $session{'CurrentUser'} );
$inactive->FromSQL( RT::IR->Query(
    Lifecycle => $Lifecycle,
    MemberOf => $IncidentObj,
    Status   => \@inactive_statuses,
));

my $total_count = $active->CountAll + $inactive->CountAll;


my @box_actions;
if ( $IncidentObj->CurrentUserHasRight('ModifyTicket') ) {
    if (1) { # XXX TODO RESTORE THIS ACL CHECK
    # $QueueObj->Id and $QueueObj->CurrentUserHasRight('CreateTicket') ) {
        push @box_actions, {
            title => $Lifecycle ne RT::IR->lifecycle_investigation? loc('Create') : loc('Launch'),
            class => 'create_child' . ($Lifecycle ? '_'.$Lifecycle : ''),
            path => RT::IR->HREFTo("CreateInQueue.html?Incident=$id&Lifecycle=".$Lifecycle),
        };
    }
    push @box_actions, {
        title => loc('Link'),
        path  => RT::IR->HREFTo("Link/FromIncident/?id=$id&Lifecycle=".$Lifecycle),
    };
}

if ( $total_count > $Rows ) {
    push @box_actions, {
        title => loc("More... ([_1] total)", $total_count),
        path => RT::IR->HREFTo('Incident/Children/?Lifecycle='. $Lifecycle .'&id='. $id)
    };
}
my $box_actions = join '&nbsp;'x3,
    map q{<a href="} . $_->{'path'} . ( $_->{'class'} ? q{" class="} . $_->{'class'} : '' ) . q{">}
        . $m->interp->apply_escapes( $_->{title}, 'h' ) . q{</a>},
    @box_actions;

</%INIT>
