#!/usr/bin/env perl
### before: #!@PERL@
# BEGIN BPS TAGGED BLOCK {{{
#
# COPYRIGHT:
#
# This software is Copyright (c) 1996-2020 Best Practical Solutions, LLC
#                                          <sales@bestpractical.com>
#
# (Except where explicitly superseded by other copyright notices)
#
#
# LICENSE:
#
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org.
#
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 or visit their web page on the internet at
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
#
#
# CONTRIBUTION SUBMISSION POLICY:
#
# (The following paragraph is not intended to limit the rights granted
# to you to modify and distribute this software under the terms of
# the GNU General Public License and is only of importance to you if
# you choose to contribute your changes and enhancements to the
# community by submitting them to Best Practical Solutions, LLC.)
#
# By intentionally submitting any modifications, corrections or
# derivatives to this work, or any other work intended for use with
# Request Tracker, to Best Practical Solutions, LLC, you confirm that
# you are the copyright holder for those contributions and you grant
# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
# royalty-free, perpetual, license to use, copy, create derivative
# works based on those contributions, and sublicense and distribute
# those contributions and any derivatives thereof.
#
# END BPS TAGGED BLOCK }}}
use strict;
use warnings;

### after: use lib qw(@RT_LIB_PATH@);
use lib qw(/opt/rt5/local/lib /opt/rt5/lib);

use RT;
RT->LoadConfig;
RT->Init;

my %special_rename = (
    howreported => 'How Reported',
    reportertype => 'Reporter Type',
    whereblocked => 'Where Blocked',
);

my $saved_searches = RT::Attributes->new(RT->SystemUser);
$saved_searches->Limit( FIELD => 'Name', VALUE => 'SavedSearch' );
while ( my $s = $saved_searches->Next ) {
    my $content    = $s->Content;
    my $old_query  = $content->{Query};
    my $old_format = $content->{Format};
    my $special = join '|', keys %special_rename;
    my $cf_values = join '|', values %special_rename;
    foreach ( $content->{Query}, $content->{Format} ) {
        s/(?<=CF\.{)_RTIR_//ig;
        s/(?<=CustomField\.{)_RTIR_//ig;
        s/\b($special)\b/$special_rename{lc($1)}/ige;

        # Add quotes to handle new CFs with spaces
        s/\s((CF|CustomField)\.{($cf_values)})\s/ '$1' /g;
    }

    if ( $old_query ne $content->{Query} || $old_format ne $content->{Format} )
    {
        my $description = $s->Description;
        $description = 'Unnamed (id: ' . $s->Id . ')' unless $description;

        my ( $status, $msg ) = $s->SetContent($content);
        if ($status) {
            print 'Updated content of saved search ' . $description;
        }
        else {
            print 'Failed to update content of saved search: '
              . $description . $msg;
        }
        print "\n";
    }
}

print "Done.\n";
